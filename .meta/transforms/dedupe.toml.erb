[transforms.dedupe]
title = "Dedupe events"
allow_you_to_description = "prevent duplicate Events from being outputted by using an LRU cache"
beta = false
common = false
function_category = "filter"
input_types = ["log"]
output_types = ["log"]
requirements = {}

<%= render("_partials/fields/_component_options.toml", type: "transform", name: "dedupe") %>

[transforms.dedupe.options.fields]
type = "table"
description = "Options controlling what fields to match against"
required = true

[transforms.dedupe.options.fields.children.match]
type = "[string]"
common = true
field_path_notation = true
examples = [["field1", "parent.child_field"]]
default = ["timestamp", "host", "message"]
description = """\
The field names considered when deciding if an Event is a duplicate. This can
also be globally set via the \
[global `log_schema` options][docs.reference.global-options#log_schema].\
Incompatible with the `fields.ignore` option.\
"""

[transforms.dedupe.options.fields.children.ignore]
type = "[string]"
field_path_notation = true
examples = [["field1", "parent.child_field"]]
description = """
The field names to ignore when deciding if an Event is a duplicate. \
Incompatible with the `fields.match` option.\
"""

[transforms.dedupe.options.cache]
type = "table"
description = "Options controlling how we cache recent Events for future duplicate checking."

[transforms.dedupe.options.cache.children.num_events]
type = "uint"
common = true
examples = [5000]
default = 5000
description = "The number of recent Events to cache and compare new incoming Events against."
