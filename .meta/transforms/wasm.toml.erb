[transforms.wasm]
title = "WASM"
allow_you_to_description = "execute **experimental** WASM plugins"
beta = true
common = false
function_category = "program"
input_types = ["log"]
output_types = ["log"]
requirements.feature = "wasm"
only_operating_systems = ["Linux"]

<%= render("_partials/fields/_component_options.toml", type: "transform", name: "wasm") %>

[transforms.wasm.options.module]
type = "string"
examples = [
  "./modules/example.wasm",
  "/example.wat",
  "example.wasm",
]
common = true
required = true
description = """\
The file path of the `.wasm` or `.wat` module.
"""

[transforms.wasm.options.artifact_cache]
type = "string"
examples = [
  "/etc/vector/artifacts",
  "/var/lib/vector/artifacts",
  "C:\\vector\\artifacts",
]
common = true
required = true
description = """\
The directory where Vector should store the artifact it builds of this WASM module. Typically, all WASM modules share this.
"""

[transforms.wasm.options.heap_max_size]
type = "int"
common = true
default = 10485760
required = false
description = """\
The maximum size of the heap of this module, in bytes. (This includes the module itself, default is 10 MB.)
"""

[[transforms.wasm.examples]]
label = "Generic"
body = """\
Given the following configuration:

<CodeHeader fileName="vector.toml" />

```toml title="vector.toml"
[transforms.test]
  inputs = [...]
  type = "wasm"
  module = "module.wasm"
  artifact_cache = "artifacts/"
```

Accompanied by a `module.wasm` file built via `cargo +nightly --target wasm32-wasi ...`, Vector will use the module as a
custom transform.
"""
