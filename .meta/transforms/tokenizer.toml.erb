[transforms.tokenizer]
title = "Tokenizer"
allow_you_to_description = """\
tokenize a field's value by splitting on white space, ignoring special \
wrapping characters, and zip the tokens into ordered field names\
"""
beta = false
common = true
function_category = "parse"
input_types = ["log"]
output_types = ["log"]
requirements = {}

<%= render("_partials/fields/_component_options.toml", type: "transform", name: "tokenizer") %>

[transforms.tokenizer.options.field]
type = "string"
common = true
default = "message"
examples = ["message", "parent.child"]
field_path_notation = true
description = "The log field to tokenize."

[transforms.tokenizer.options.field_names]
type = "[string]"
common = true
examples = [["timestamp", "level", "message", "parent.child"]]
field_path_notation = true
required = true
description = "The log field names assigned to the resulting tokens, in order."

[transforms.tokenizer.options.drop_field]
type = "bool"
common = true
default = true
description = "If `true` the `field` will be dropped after parsing."

<%= render("_partials/fields/_types_options.toml", namespace: "transforms.tokenizer.options", common: true) %>

[[transforms.tokenizer.examples]]
label = "Syslog 5424"
body = """\
Given the following log line:

```json title="log event"
{
  "message": "5.86.210.12 - zieme4647 [19/06/2019:17:20:49 -0400] "GET /embrace/supply-chains/dynamic/vertical" 201 20574"
}
```

And the following configuration:

```toml title="vector.toml"
[transforms.<transform-id>]
type = "tokenizer"
field = "message"
field_names = ["remote_addr", "ident", "user_id", "timestamp", "message", "status", "bytes"]
```

A [`log` event][docs.data-model.log] will be output with the following structure:

```javascript title="log event"
{
  // ... existing fields
  "remote_addr": "5.86.210.12",
  "user_id": "zieme4647",
  "timestamp": "19/06/2019:17:20:49 -0400",
  "message": "GET /embrace/supply-chains/dynamic/vertical",
  "status": "201",
  "bytes": "20574"
}
```

A few things to note about the output:

1. The `message` field was overwritten.
2. The `ident` field was dropped since it contained a `"-"` value.
3. All values are strings, we have plans to add type coercion.
4. [Special wrapper characters](#special-characters) were dropped, such as
   wrapping `[...]` and `"..."` characters.\
"""
