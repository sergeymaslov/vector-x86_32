[transforms.coercer]
title = "Coercer"
allow_you_to_description = "coerce log fields into fixed types"
beta = false
common = false
function_category = "schema"
input_types = ["log"]
output_types = ["log"]
requirements = {}

<%= render("_partials/fields/_component_options.toml", type: "transform", name: "coercer") %>

[transforms.coercer.options.drop_unspecified]
type = "bool"
required = false
default = false
description = """\
Set to `true` to drop all fields that are not specified in the `types` table. \
Make sure both `message` and `timestamp` are specified in the `types` table \
as their absense will cause the original message data to be dropped along \
with other extraneous fields.\
"""

<%= render("_partials/fields/_types_options.toml", namespace: "transforms.coercer.options", common: true) %>

[[transforms.coercer.examples]]
label = "Generic"
body = """\
Given the following input:

```json
{
  // ... existing fields
  "bytes_in": "5667",
  "bytes_out": "20574",
  "host": "5.86.210.12",
  "message": "GET /embrace/supply-chains/dynamic/vertical",
  "status": "201",
  "timestamp": "19/06/2019:17:20:49 -0400",
  "user_id": "zieme4647"
}
```

And the following configuration:

```toml title="vector.toml"
[transforms.<transform-id>]
  type = "coercer"

  types.bytes_in = "int"
  types.bytes_out = "int"
  types.timestamp = "timestamp|%d/%m/%Y:%H:%M:%S %z"
  types.status = "int"
```

A [`log` event][docs.data-model.log] will be output with the following structure:

```javascript
{
  // ... existing fields
  "bytes_in": 5667,
  "bytes_out": 20574,
  "host": "5.86.210.12",
  "message": "GET /embrace/supply-chains/dynamic/vertical",
  "status": 201,
  "timestamp": "2019-06-19T17:20:49-04:00",
  "user_id": "zieme4647"
}
```\
"""
