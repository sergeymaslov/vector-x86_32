<%- groups ||= [] -%>
<%- common ||= false %>
<%- default ||= nil %>
[<%= namespace %>.encoding]
type = "table"
common = <%= (encodings.any?).to_toml %>
required = <%= (encodings.any? && default.nil?).to_toml %>
groups = <%= groups.to_toml %>
description = """\
Configures the encoding specific sink behavior.\
"""

<%- if encodings.any? -%>
  [<%= namespace %>.encoding.children.codec]
  type = "string"
  common = true
  <%- if default -%>
  default = <%= default.to_toml %>
  <%- else -%>
  required = true
  <%- end -%>
  groups = <%= groups.to_toml %>
  description = """\
  The encoding codec used to serialize the events before outputting.\
  """

  [<%= namespace %>.encoding.children.codec.enum]
  <%- if encodings.include?("json") -%>json = "Each event is encoded into JSON and the payload is represented as a JSON array."<%- end -%>
  <%- if encodings.include?("ndjson") -%>ndjson = "Each event is encoded into JSON and the payload is new line delimited."<%- end -%>
  <%- if encodings.include?("text") -%>text = "Each event is encoded into text via the `message` key and the payload is new line delimited."<%- end -%>
<%- end -%>

[<%= namespace %>.encoding.children.only_fields]
type = "[string]"
common = <%= common == true || (common.is_a?(Array) && common.include?("only_fields")) %>
examples = [["timestamp", "message", "host"]]
required = false
groups = <%= groups.to_toml %>
description = """\
Limit the sink to only encoding the specified labels.\
"""

[<%= namespace %>.encoding.children.except_fields]
type = "[string]"
common = <%= common == true || (common.is_a?(Array) && common.include?("except_fields")) %>
examples = [["timestamp", "message", "host"]]
required = false
groups = <%= groups.to_toml %>
description = """\
Prevent the sink from encoding the specified labels.\
"""

[<%= namespace %>.encoding.children.timestamp_format]
type = "string"
common = <%= common == true || (common.is_a?(Array) && common.include?("timestamp_format")) %>
default = "rfc3339"
required = false
groups = <%= groups.to_toml %>
description = "How to format event timestamps."

[<%= namespace %>.encoding.children.timestamp_format.enum]
rfc3339 = "Format as an RFC3339 string"
unix = "Format as a unix timestamp, can be parsed as a Clickhouse DateTime"
