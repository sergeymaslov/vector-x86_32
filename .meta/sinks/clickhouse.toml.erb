[sinks.clickhouse]
title = "Clickhouse"
noun = "Clickhouse"
beta = true
common = true
delivery_guarantee = "at_least_once"
description = """\
[ClickHouse][urls.clickhouse] is an open-source column-oriented database \
management system that manages extremely large volumes of data, including \
non-aggregated data, in a stable and sustainable manner and allows generating \
custom data reports in real time. The system is linearly scalable and can be \
scaled up to store and process trillions of rows and petabytes of data. This \
makes it an best-in-class storage for logs and metrics data.\
"""
features = [
  "Send logs to ClickHouse.",
  "Compress and batch data to maximize throughput.",
  "Encode timestamps to ClickHouse supported formats.",
  "Automatically retry failed requests, with backoff.",
  "Buffer your data in-memory or on-disk for performance and durability.",
]
function_category = "transmit"
healthcheck = true
egress_method = "batching"
input_types = ["log"]
requirements.clickhouse = ">= 1.1.54378"
service_providers = ["Yandex"]
write_to_description = "[Clickhouse][urls.clickhouse] via the [`HTTP` Interface][urls.clickhouse_http]"

<%= render("_partials/fields/_component_options.toml", type: "sink", name: "clickhouse") %>

<%= render("_partials/fields/_batch_options.toml", namespace: "sinks.clickhouse.options", common: false, max_bytes: 1049000, max_events: nil, timeout_secs: 1) %>

<%= render(
  "_partials/fields/_buffer_options.toml",
  namespace: "sinks.clickhouse.options",
  common: false
) %>

<%= render(
  "_partials/fields/_request_options.toml",
  namespace: "sinks.clickhouse.options",
  common: false,
  in_flight_limit: 5,
  rate_limit_duration_secs: 1,
  rate_limit_num: 5,
  retry_initial_backoff_secs: 1,
  retry_max_duration_secs: 10,
  timeout_secs: 30
) %>

[sinks.clickhouse.options.auth]
type = "table"
common = false
description = "Options for the authentication strategy."

[sinks.clickhouse.options.auth.children.strategy]
type = "string"
required = true
sort = 1
description = "The authentication strategy to use."

[sinks.clickhouse.options.auth.children.strategy.enum]
basic = "The [basic authentication strategy][urls.basic_auth]."
bearer = "The bearer token authentication strategy."

[sinks.clickhouse.options.auth.children.password]
type = "string"
examples = ["${CLICKHOUSE_PASSWORD}", "password"]
relevant_when = {strategy = "basic"}
required = true
description = "The basic authentication password."

[sinks.clickhouse.options.auth.children.user]
type = "string"
examples = ["${CLICKHOUSE_USERNAME}", "username"]
relevant_when = {strategy = "basic"}
required = true
description = "The basic authentication user name."

[sinks.clickhouse.options.auth.children.token]
type = "string"
examples = ["${API_TOKEN}", "xyz123"]
required = true
relevant_when = {strategy = "bearer"}
description = "The token to use for bearer authentication"

<%= render("_partials/fields/_compression_options.toml",
  namespace: "sinks.clickhouse.options",
  options: {
    "category" => "Requests",
    "default" => "gzip"
  }
) %>

[sinks.clickhouse.options.host]
type = "string"
common = true
examples = ["http://localhost:8123"]
required = true
description = "The host url of the [Clickhouse][urls.clickhouse] server."

[sinks.clickhouse.options.table]
type = "string"
common = true
examples = ["mytable"]
required = true
description = "The table that data will be inserted into."

<%= render(
  "_partials/fields/_tls_connector_options.toml",
  namespace: "sinks.clickhouse.options",
  can_enable: false,
  can_verify_certificate: true,
  can_verify_hostname: true
) %>

[sinks.clickhouse.options.database]
type = "string"
common = true
examples = ["mydatabase"]
description = "The database that contains the stable that data will be inserted into."

<%= render(
  "_partials/fields/_encoding_options.toml",
  namespace: "sinks.clickhouse.options",
  encodings: [],
  common: ["timestamp_format"]
) %>
