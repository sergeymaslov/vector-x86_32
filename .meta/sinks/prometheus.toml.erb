[sinks.prometheus]
title = "Prometheus"
noun = "Prometheus"
beta = true
common = true
delivery_guarantee = "best_effort"
<%= render("_partials/descriptions/_prometheus.toml") %>
egress_method = "exposing"
features = [
  "Expose an endpoint that Prometheus can scrape for metrics data.",
  "Automatically aggregate metrics at the edge for improved performance.",
]
function_category = "transmit"
healthcheck = false
input_types = ["metric"]
requirements.prometheus = ">= 1.0"
write_to_description = "[Prometheus][urls.prometheus] metrics service"

<%= render(
  "_partials/fields/_component_options.toml",
  type: "sink",
  name: "prometheus",
  healthcheck: false
) %>

[sinks.prometheus.options.address]
type = "string"
common = true
examples = ["0.0.0.0:9598"]
required = true
description = "The address to expose for scraping."

[sinks.prometheus.options.namespace]
type = "string"
common = true
examples = ["service"]
required = true
description = """\
A prefix that will be added to all metric names.
It should follow Prometheus [naming conventions][urls.prometheus_metric_naming].\
"""

[sinks.prometheus.options.buckets]
type = "[float]"
default = [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1.0, 2.5, 5.0, 10.0]
unit = "seconds"
description = """\
Default buckets to use for aggregating [distribution][docs.data-model.metric#distribution] metrics into histograms.\
"""

[sinks.prometheus.options.flush_period_secs]
type = "uint"
default = 60
unit = "seconds"
description = """\
Time interval between [set][docs.data-model.metric#set] values are reset.\
"""

[[sinks.prometheus.examples]]
label = "Histograms"
body = """\
Given the following histogram metric events:

```json title="Example histogram metrics"
[
  {
    "name": "response_time_s",
    "kind": "incremental",
    "value": {
      "type": "distribution",
      "values": [0.243],
      "sample_rates": [1.0]
    }
  },
  {
    "name": "response_time_s",
    "kind": "incremental",
    "value": {
      "type": "distribution",
      "values": [0.546],
      "sample_rates": [1.0]
    }
  }
]
```

This sink will output the following:

```text title="Example sink output"
# HELP response_time_s response_time_s
# TYPE response_time_s histogram
response_time_s_bucket{le="0.005"} 0
response_time_s_bucket{le="0.01"} 1
response_time_s_bucket{le="0.025"} 0
response_time_s_bucket{le="0.05"} 1
response_time_s_bucket{le="0.1"} 0
response_time_s_bucket{le="0.25"} 0
response_time_s_bucket{le="0.5"} 0
response_time_s_bucket{le="1.0"} 0
response_time_s_bucket{le="2.5"} 0
response_time_s_bucket{le="5.0"} 0
response_time_s_bucket{le="10.0"} 0
response_time_s_bucket{le="+Inf"} 0
response_time_s_sum 0.789
response_time_s_count 2
```\
"""

[[sinks.prometheus.examples]]
label = "Counters"
body = """
Given the following counter metric events:

```json title="Example counter metrics"
[
  {
    "name": "logins",
    "kind": "incremental",
    "value": {
      "type": "counter",
      "value": 1.0
    }
  },
  {
    "name": "logins",
    "kind": "incremental",
    "value": {
      "type": "counter",
      "value": 3.0
    }
  }
]

This sink will output the following:

```text title="Example sink output"
# HELP logins logins
# TYPE logins counter
logins 4
```\
"""

[[sinks.prometheus.examples]]
label = "Gauges"
body = """\
Given the following gauge metric events:

```json title="Example gauge metrics"
[
  {
    "name": "memory_rss",
    "kind": "incremental",
    "value": {
      "type": "gauge",
      "value": 250.0
    }
  },
  {
    "name": "memory_rss",
    "kind": "incremental",
    "value": {
      "type": "gauge",
      "value": -25.0
    }
  }
]
```

This sink will output the following:

```text title="Example sink output"
# HELP memory_rss memory_rss
# TYPE memory_rss gauge
memory_rss 225
```\
"""
