[sinks.gcp_cloud_storage]
title = "GCP Cloud Storage (GCS)"
noun = "GCP Cloud Storage (GCS)"
beta = true
common = true
delivery_guarantee = "at_least_once"
description = """\
[Google Cloud Storage][urls.gcp_cloud_storage] is a RESTful online file \
storage web service for storing and accessing data on Google Cloud Platform \
infrastructure. The service combines the performance and scalability of \
Google's cloud with advanced security and sharing capabilities. This makes it \
a prime candidate for log data.\
"""
features = [
  "Send logs to GCP Cloud Storage.",
  "Leverage any of GCP's IAM strategies.",
  "Confifgure object sizes to reduce request cost.",
  "Dynamically partition logs across different key prefixes.",
  "Optionally compress data to reduce storage cost.",
  "Control object-level ACL.",
  "Choose different storage classes for cost control.",
  "Automatically retry failed requests, with backoff.",
  "Buffer your data in-memory or on-disk for performance and durability."
]
function_category = "transmit"
healthcheck = true
egress_method = "batching"
input_types = ["log"]
requirements = {}
service_providers = ["GCP"]
write_to_description = "[Google Cloud Platform's Cloud Storage service](https://cloud.google.com/storage) via the [XML Interface](https://cloud.google.com/storage/docs/xml-api/overview)"

<%= render("_partials/fields/_component_options.toml", type: "sink", name: "gcp_cloud_storage") %>

<%= render("_partials/fields/_batch_options.toml", namespace: "sinks.gcp_cloud_storage.options", common: false, max_bytes: 10485760, max_events: nil, timeout_secs: 300) %>

<%= render(
  "_partials/fields/_buffer_options.toml",
  namespace: "sinks.gcp_cloud_storage.options",
  common: true
) %>

<%= render(
  "_partials/fields/_request_options.toml",
  namespace: "sinks.gcp_cloud_storage.options",
  common: false,
  in_flight_limit: 5,
  rate_limit_duration_secs: 1,
  rate_limit_num: 1000,
  retry_initial_backoff_secs: 1,
  retry_max_duration_secs: 10,
  timeout_secs: 60
) %>

<%= render("_partials/fields/_gcp.toml", namespace: "sinks.gcp_cloud_storage", access: "Cloud Storage API") %>

[sinks.gcp_cloud_storage.options.bucket]
type = "string"
common = false
required = true
examples = ["my-bucket"]
description = "The GCS bucket name."

[sinks.gcp_cloud_storage.options.acl]
type = "string"
category = "Object Attributes"
common = false
required = false
description = """
Predefined ACL to apply to the created objects. \
For more information, see [Predefined ACLs][urls.gcs_predefined_acl]. \
If this is not set, GCS will apply a default ACL when the object is created.\
"""

[sinks.gcp_cloud_storage.options.acl.enum]
authenticatedRead = "Gives the bucket or object owner OWNER permission, and gives all authenticated Google account holders READER permission."
bucketOwnerFullControl = "Gives the object and bucket owners OWNER permission."
bucketOwnerRead = "Gives the object owner OWNER permission, and gives the bucket owner READER permission."
private = "Gives the bucket or object owner OWNER permission for a bucket or object."
projectPrivate = "Gives permission to the project team based on their roles. Anyone who is part of the team has READER permission. Project owners and project editors have OWNER permission. This the default."
publicRead = "Gives the bucket or object owner OWNER permission, and gives all users, both authenticated and anonymous, READER permission. When you apply this to an object, anyone on the Internet can read the object without authenticating."

[sinks.gcp_cloud_storage.options.storage_class]
type = "string"
category = "Object Attributes"
common = false
required = false
description = "The storage class for the created objects. See [the GCP storage classes][urls.gcs_storage_classes] for more details."

[sinks.gcp_cloud_storage.options.storage_class.enum]
STANDARD = "Standard Storage is best for data that is frequently accessed and/or stored for only brief periods of time. This is the default."
NEARLINE = "Nearline Storage is a low-cost, highly durable storage service for storing infrequently accessed data."
COLDLINE = "Coldline Storage is a very-low-cost, highly durable storage service for storing infrequently accessed data."
ARCHIVE = "Archive Storage is the lowest-cost, highly durable storage service for data archiving, online backup, and disaster recovery."

[sinks.gcp_cloud_storage.options.metadata]
type = "string"
category = "Object Attributes"
common = false
required = false
description = "The set of metadata `key:value` pairs for the created objects. See the [GCS custom metadata][urls.gcs_custom_metadata] documentation for more details."

[sinks.gcp_cloud_storage.options.metadata.children."`[key-name]`"]
type = "string"
required = false
examples = [ {"Key1" = "Value1"} ]
description = "A custom metadata item to be added to the created objects."

[sinks.gcp_cloud_storage.options.key_prefix]
type = "string"
category = "Object Names"
common = true
default = "date=%F/"
examples = [
  "date=%F/",
  "date=%F/hour=%H/",
  "year=%Y/month=%m/day=%d/",
  "application_id={{ application_id }}/date=%F/",
]
partition_key = true
templateable = true
description = "A prefix to apply to all object key names. This should be used to partition your objects, and it's important to end this value with a `/` if you want this to be the root GCS \"folder\"."

[sinks.gcp_cloud_storage.options.filename_time_format]
type = "string"
category = "Object Names"
default = "%s"
description = "The format of the resulting object file name. [`strftime` specifiers][urls.strptime_specifiers] are supported."

[sinks.gcp_cloud_storage.options.filename_append_uuid]
type = "bool"
category = "Object Names"
default = true
description = "Whether or not to append a UUID v4 token to the end of the file. This ensures there are no name collisions high volume use cases."

[sinks.gcp_cloud_storage.options.filename_extension]
type = "string"
category = "Object Names"
default = "log"
description = "The filename extension to use in the object name."

<%= render(
  "_partials/fields/_encoding_options.toml",
  namespace: "sinks.gcp_cloud_storage.options",
  encodings: ["ndjson", "text"]
) %>

<%= render("_partials/fields/_compression_options.toml",
  namespace: "sinks.gcp_cloud_storage.options"
) %>

<%= render(
  "_partials/fields/_tls_connector_options.toml",
  namespace: "sinks.gcp_cloud_storage.options",
  can_enable: false,
  can_verify_certificate: true,
  can_verify_hostname: true
) %>
