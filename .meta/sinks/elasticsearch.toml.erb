[sinks.elasticsearch]
title = "Elasticsearch"
noun = "Elasticsearch"
beta = false
common = true
delivery_guarantee = "at_least_once"
description = """\
[Elasticsearch][urls.elasticsearch] is a search engine based on the Lucene \
library. It provides a distributed, multitenant-capable full-text search \
engine with an HTTP web interface and schema-free JSON documents. As a result, \
it is very commonly used to store and analyze log data. It ships with Kibana \
which is a simple interface for visualizing and exploring data in \
Elasticsearch.\
"""
egress_method = "batching"
features = [
  "Send logs to Elasticsearch (AWS, Elastic Cloud, self-hosted, etc).",
  "Batch data to maximize throughput.",
  "Dynamically partition logs across indexes.",
  "Automatically retry failed requests, with backoff.",
  "Buffer your data in-memory or on-disk for performance and durability.",
]
function_category = "transmit"
healthcheck = true
input_types = ["log"]
requirements = {}
service_providers = ["AWS", "Azure", "Elastic", "GCP"]
write_to_description = """\
[Elasticsearch][urls.elasticsearch] via the [`_bulk` API \
endpoint][urls.elasticsearch_bulk]\
"""

<%= render(
  "_partials/fields/_aws_env_vars.toml",
  namespace: "sinks.elasticsearch.env_vars"
) %>

<%= render(
  "_partials/fields/_component_options.toml",
  type: "sink",
  name: "elasticsearch"
) %>

<%= render(
  "_partials/fields/_batch_options.toml",
  namespace: "sinks.elasticsearch.options",
  common: false,
  max_bytes: 10490000,
  max_events: nil,
  timeout_secs: 1
) %>

<%= render(
  "_partials/fields/_buffer_options.toml",
  namespace: "sinks.elasticsearch.options",
  common: false
) %>

<%= render(
  "_partials/fields/_request_options.toml",
  namespace: "sinks.elasticsearch.options",
  common: false,
  in_flight_limit: 5,
  rate_limit_duration_secs: 1,
  rate_limit_num: 5,
  retry_initial_backoff_secs: 1,
  retry_max_duration_secs: 10,
  timeout_secs: 60
) %>

<%= render("_partials/fields/_encoding_options.toml",
  namespace: "sinks.elasticsearch.options",
  encodings: []
) %>

[sinks.elasticsearch.options.auth]
type = "table"
common = false
description = "Options for the authentication strategy."

[sinks.elasticsearch.options.auth.children.strategy]
type = "string"
required = true
sort = 1
description = "The authentication strategy to use."

[sinks.elasticsearch.options.auth.children.strategy.enum]
aws = """\
Authentication strategy used for [AWS' hosted Elasticsearch \
service][urls.aws_elasticsearch].\
"""
basic = "The [basic authentication strategy][urls.basic_auth]."

[sinks.elasticsearch.options.auth.children.password]
type = "string"
examples = ["${ELASTICSEARCH_PASSWORD}", "password"]
relevant_when = {strategy = "basic"}
required = true
description = "The basic authentication password."

[sinks.elasticsearch.options.auth.children.user]
type = "string"
examples = ["${ELASTICSEARCH_USERNAME}", "username"]
relevant_when = {strategy = "basic"}
required = true
description = "The basic authentication user name."

[sinks.elasticsearch.options.auth.children.assume_role]
type = "string"
examples = ["arn:aws:iam::123456789098:role/my_role"]
relevant_when = {strategy = "aws"}
required = false
description = "The ARN of an [IAM role][urls.aws_iam_role] to assume at startup."

[sinks.elasticsearch.options.aws]
type = "table"
common = false
description = "Options for the AWS connections."

[sinks.elasticsearch.options.aws.children.region]
type = "string"
common = true
examples = ["us-east-1"]
relevant_when = {strategy = "aws"}
required = false
description = """\
The [AWS region][urls.aws_regions] of the target service. \
This defaults to the region named in the host parameter, \
or the value of the `$AWS_REGION` or `$AWS_DEFAULT_REGION` environment \
variables if that cannot be determined, or "us-east-1".\
"""

<%= render("_partials/fields/_compression_options.toml",
  namespace: "sinks.elasticsearch.options",
  options: {
    "warnings" => [{"visibility_level" => "component", "text" => "AWS hosted Elasticsearch is unable to use compression"}]
  }
) %>

[sinks.elasticsearch.options.doc_type]
type = "string"
default = "_doc"
description = """\
The `doc_type` for your index data. This is only relevant for \
Elasticsearch <= 6.X. If you are using >= 7.0 you do not need to set this \
option since Elasticsearch has removed it.\
"""

[sinks.elasticsearch.options.headers]
type = "table"
description = "Options for custom headers."

[sinks.elasticsearch.options.headers.children."`[header-name]`"]
type = "string"
examples = [
  {Authorization = "${ELASTICSEARCH_TOKEN}"},
  {"X-Powered-By" = "Vector"}
]
required = true
description = """\
A custom header to be added to each outgoing Elasticsearch request.\
"""

[sinks.elasticsearch.options.host]
type = "string"
common = true
examples = ["http://10.24.32.122:9000"]
description = """\
The host of your Elasticsearch cluster. This should be the full URL as shown \
in the example.\
"""

[sinks.elasticsearch.options.id_key]
type = "string"
examples = [
  "id",
  "_id",
]
description = """\
The name of the event key that should map to Elasticsearch's \
[`_id` field][urls.elasticsearch_id_field]. By default, Vector does not set \
the `_id` field, which allows Elasticsearch to set this automatically. You \
should think carefully about setting your own Elasticsearch IDs, since this \
can [hinder perofrmance][urls.elasticsearch_id_performance].\
"""

[sinks.elasticsearch.options.index]
type = "string"
common = true
default = "vector-%F"
examples = [
  "application-{{ application_id }}-%Y-%m-%d",
  "vector-%Y-%m-%d",
]
templateable = true
description = "Index name to write events to."

[sinks.elasticsearch.options.pipeline]
type = "string"
common = true
examples = ["pipeline-name"]
description = "Name of the pipeline to apply."

[sinks.elasticsearch.options.query]
type = "table"
description = "Custom parameters to Elasticsearch query string."

[sinks.elasticsearch.options.query.children."`[parameter-name]`"]
type = "string"
examples = [{"X-Powered-By" = "Vector"}]
required = true
description = "A custom parameter to be added to each Elasticsearch request."

<%= render(
  "_partials/fields/_tls_connector_options.toml",
  namespace: "sinks.elasticsearch.options",
  can_enable: false,
  can_verify_certificate: true,
  can_verify_hostname: true
) %>

[[sinks.elasticsearch.examples]]
label = "Generic"
body = """\
```http
POST <host>/_bulk HTTP/1.1
Host: <host>
Content-Type: application/x-ndjson
Content-Length: <byte_size>

{ "index" : { "_index" : "<index>" } }
<json_encoded_log>
{ "index" : { "_index" : "<index>" } }
<json_encoded_log>
{ "index" : { "_index" : "<index>" } }
<json_encoded_log>
```\
"""
