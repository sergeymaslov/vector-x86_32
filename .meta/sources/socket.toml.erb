[sources.socket]
title = "Socket"
noun = "a TCP, UDP, or UDS socket"
beta = false
common = true
delivery_guarantee = "best_effort"
features = [
  "Accept log data over a TCP, UDP, or UDS socket.",
  "Automatically enrich logs with host-level context.",
]
function_category = "receive"
output_types = ["log"]
requirements.network_port = "9000"
strategies = ["service"]
through_description = "a [socket][urls.socket], such as a [TCP][urls.tcp], [UDP][urls.udp], or [UDS][urls.uds] socket"

<%= render(
  "_partials/fields/_component_options.toml",
  type: "source",
  name: "socket",
  groups: ["tcp", "udp", "unix"]
) %>

[sources.socket.options.mode]
type = "string"
common = true
examples.tcp = ["tcp"]
examples.udp = ["udp"]
examples.unix = ["unix"]
groups = ["tcp", "udp", "unix"]
required = true
description = "The type of socket to use."

[sources.socket.options.mode.enum]
tcp = "TCP Socket."
udp = "UDP Socket."
unix = "Unix Domain Socket."

[sources.socket.options.address]
type = "string"
common = true
examples = ["0.0.0.0:9000", "systemd", "systemd#3"]
groups = ["tcp", "udp"]
relevant_when = {mode = ["tcp", "udp"]}
required = true
description = """\
The address to listen for connections on, or `systemd#N` to use the Nth socket \
passed by systemd socket activation. If an address is used it _must_ include \
a port.
"""

[sources.socket.options.path]
type = "string"
common = true
examples = ["/path/to/socket"]
groups = ["unix"]
relevant_when = {mode = "unix"}
required = true
description = """The unix socket path. *This should be absolute path*.\
"""

[sources.socket.options.host_key]
type = "string"
category = "Context"
groups = ["tcp", "udp", "unix"]
default = "host"
description = """\
The key name added to each event representing the current host. This can also \
be globally set via the \
[global `host_key` option][docs.reference.global-options#host_key].\
"""

[sources.socket.options.max_length]
type = "uint"
common = true
default = 102400
groups = ["tcp", "unix"]
relevant_when = {mode = ["tcp", "unix"]}
unit = "bytes"
description = """\
The maximum bytes size of incoming messages before they are discarded.\
"""

[sources.socket.options.shutdown_timeout_secs]
type = "uint"
default = 30
groups = ["tcp"]
relevant_when = {mode = "tcp"}
unit = "seconds"
description = """\
The timeout before a connection is forcefully closed during shutdown.\
"""

<%= render(
  "_partials/fields/_tls_acceptor_options.toml",
  namespace: "sources.socket.options",
  relevant: "relevant_when = {mode = \"tcp\"}",
  groups: ["tcp"]
) %>

[[sources.socket.examples]]
label = "Generic"
body = """\
Given the following input line:

```text title="Example input"
2019-02-13T19:48:34+00:00 [info] Started GET "/" for 127.0.0.1
```

A log event will be output with the following structure:

```json title="Example log event"
{
  "timestamp": <current_timestamp>,
  "message": "2019-02-13T19:48:34+00:00 [info] Started GET "/" for 127.0.0.1",
  "host": "<upstream_hostname>"
}
```\
"""

[sources.socket.fields.log.fields.host]
type = "string"
examples = ["my.host.com"]
required = true
description = """\
The upstream hostname.
"""

[sources.socket.fields.log.fields.message]
type = "string"
examples = ["Started GET / for 127.0.0.1 at 2012-03-10 14:28:14 +0100"]
required = true
description = """\
The raw message, unaltered.
"""

[sources.socket.fields.log.fields.timestamp]
type = "timestamp"
examples = ["2019-11-01T21:15:47.443232Z"]
required = true
description = """\
The exact time the event was ingested.\
"""
