---
title: Install Vector via Nix
sidebar_label: Nix
description: Install Vector through the Nix package manager
---

<%- package_manager = metadata.installation.package_managers.nix -%>
<%- downloads = metadata.installation.select_downloads(package_manager: package_manager.name) -%>
<%- interfaces = fetch_interfaces(package_manager.interfaces) -%>
<%- strategies = fetch_strategies(package_manager.strategies) -%>

Vector can be installed through the [Nix package manager][urls.nix] via
[Vector's Nix package][urls.vector_nix_package]. This package manager is
generally used on [NixOS][urls.nixos].

<Alert type="warning">

Because Vector must be manually updated on Nix, new Vector releases will be
delayed. Generally new Vector releases are made available within a few days.

</Alert>

## Install

<%= installation_tutorial(interfaces, strategies, heading_depth: 3) %>

## Configuring

The [Vector nix package][urls.vector_nix_package] does not install any
configuration files by default. You'll need to create a
[Vector configuration file][docs.configuration] and pass it to Vector via the
`--config` flag when [starting][docs.process-management#starting] Vector.

## Deploying

How you deploy Vector is largely dependent on your use case and environment.
Please see the [deployment section][docs.deployment] for more info on how to
deploy Vector.

## Administering

The Vector nix package does not use Systemd by default, but Vector does provide
a [Systemd service file][urls.vector_systemd_file] that you can use as a
starting point. How you manage the Vector process is up to you, and the
process administration section covers how to do this:

<Jump to="[[[docs.administration]]]">Administration</Jump>

## Uninstalling

```bash
nix-env --uninstall vector
```

## Updating

```bash
nix-env --file https://github.com/NixOS/nixpkgs/archive/master.tar.gz --upgrade vector
```

## Package

### Architectures

Vector's Nix packages only support the X86_64 architecture.

### Versions

Installing previous versions of Vector through `nix` is possible, but not
straightforward. For example, installing Vector `0.7.1` can be achieved with
the following command:

```bash
nix-env --file https://github.com/NixOS/nixpkgs/archive/20bbe6cba68fb9d37b5d0e373b6180dce2961e0d.tar.gz --install --attr vector
```

`20bbe6...` represents the commit sha for the `0.7.1` on the
[nix package repo][urls.vector_nix_package].

#### Listing Versions & Commit SHAs

For situations that required automated retrieval, we've thrown thogether this
handy Ruby function that will list the Vector versions and their commit sha:

```ruby
require "net/http"
require "json"

# Returns a hash mapping Vector versions to commits in `nixpkgs/nixos` repository
def nix_versions
  nixpkgs_repo = "nixos/nixpkgs"
  commits_url = "https://api.github.com/repos/#{nixpkgs_repo}/commits?path=pkgs/tools/misc/vector"

  response = Net::HTTP.get URI(commits_url)
  items = JSON.parse response

  versions = {}
  for item in items do
    match = item["commit"]["message"].match "^vector:.*(\\d+\.\\d+\.\\d+)$"
    if match
      version = match[1]
      versions[version] = item["sha"]
    end
  end

  versions
end
```

### Source Files

Vector's Nix source files are located in the
[Nix repo][urls.vector_nix_package].
