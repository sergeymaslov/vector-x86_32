<%- component = metadata.transforms.grok_parser -%>

<%= component_header(component) %>

<%- if component.requirements.any? -%>
## Requirements

<%= component_requirements(component) %>

<%- end -%>
<%- if component.warnings.any? -%>
## Warnings

<%= component_warnings(component) %>

<%- end -%>
## Configuration

<%= component_config_example(component) %>

<%= fields(component.specific_options_list, heading_depth: 3) %>

<%- if component.env_vars_list.any? -%>
## Env Vars

<%= fields(component.env_vars_list, heading_depth: 3) %>

<%- end -%>
<%- if component.examples.any? -%>
## Examples

<%= component_examples(component) %>

<%- end -%>
## How It Works [[sort]]

<%= component_sections(component) %>

### Available Patterns

Vector uses the Rust [`grok` library][urls.rust_grok_library]. All patterns
[listed here][urls.grok_patterns] are supported. It is recommended to use
maintained patterns when possible since they can be improved over time by
the community.

### Debugging

We recommend the [Grok debugger][urls.grok_debugger] for Grok testing.

### Performance

Grok is approximately 50% slower than the [`regex_parser` transform][docs.transforms.regex_parser].
We plan to add a [performance test][pages.index#performance] for this in the future.
While this is still plenty fast for most use cases we recommend using the
[`regex_parser` transform][docs.transforms.regex_parser] if you are experiencing
performance issues.


