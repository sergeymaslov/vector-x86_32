<%- component = metadata.transforms.remove_fields -%>

<%= component_header(component) %>

<%- if component.requirements.any? -%>
## Requirements

<%= component_requirements(component) %>

<%- end -%>
<%- if component.warnings.any? -%>
## Warnings

<%= component_warnings(component) %>

<%- end -%>
## Configuration

<%= component_config_example(component) %>

<%= fields(component.specific_options_list, heading_depth: 3) %>

<%- if component.env_vars_list.any? -%>
## Env Vars

<%= fields(component.env_vars_list, heading_depth: 3) %>

<%- end -%>
<%= component_fields(component, heading_depth: 2) -%>
<%- if component.examples.any? -%>
## Examples

<%= component_examples(component) %>

<%- end -%>
## How It Works [[sort]]

<%= component_sections(component) %>

### Nested Field Removal

Nested fields are removed in a _deep_ fashion. They will not remove any
ancestor object. For example, given the following `log` event:

```javascript
{
  "parent": {
    "child1": "value1",
    "child2": "value2"
  }
}
```

And the following configuration:

```toml
[transforms.remove_nested_field]
  type = "remove_fields"
  fields = ["parent.child2"]
```

Will result in the following log event:

```javascript
{
  "parent": {
    "child1": "value1",
  }
}
```

Notice that `parent.child1` field was preserved.
